# "org" ensures this Service is used with the correct Serverless Framework Access Key.
org: unsatais
# "app" enables Serverless Framework Dashboard features and sharing them with other Services.
app: inbound-notes-service
# "service" is the name of this project. This will also be added to your AWS resource names.
service: inbound-notes-service

provider:
  name: aws
  runtime: python3.9
  region: ${env:AWS_REGION}
  environment:
    DYNAMO_TABLE: ${env:DYNAMO_TABLE}
    PRODUCTS_API_URL: ${env:PRODUCTS_API_URL}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:PutItem
        - dynamodb:GetItem
        - dynamodb:DeleteItem
        - dynamodb:Scan
        - dynamodb:UpdateItem
      Resource:
        - arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${env:DYNAMO_TABLE}

functions:
  createInboundNote:
    handler: handler.create_inbound_note
    events:
      - http:
          path: inbound-notes
          method: post

  getAllInboundNotes:
    handler: handler.get_all_inbound_notes
    events:
      - http:
          path: inbound-notes
          method: get

  getInboundNote:
    handler: handler.get_inbound_note
    events:
      - http:
          path: inbound-notes/{note_id}
          method: get

  updateInboundNote:
    handler: handler.update_inbound_note
    events:
      - http:
          path: inbound-notes/{note_id}
          method: put

  deleteInboundNote:
    handler: handler.delete_inbound_note
    events:
      - http:
          path: inbound-notes/{note_id}
          method: delete

resources:
  Resources:
    InboundNotesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${env:DYNAMO_TABLE}
        AttributeDefinitions:
          - AttributeName: NoteID
            AttributeType: S
        KeySchema:
          - AttributeName: NoteID
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST

